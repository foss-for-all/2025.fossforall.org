---
const { lang } = Astro.props;
import { WebsiteConfig } from "@/config";

const config = WebsiteConfig(lang);

interface Submission {
    code: string;
    title: string;
    speakers: string[];
    submission_type: number;
    track: number;
    tags: number[];
    state: string;
    abstract: string;
    description: string;
    duration: number;
    slot_count: number;
    content_locale: string;
    do_not_record: boolean;
    image: string;
    resources: number[];
    slots: number[];
    answers: number[];
}

interface Speaker {
    code: string;
    name: string;
    biography: string;
    submissions: string[];
    avatar_url: string;
    answers: string[];
    email: string;
    timezone: string;
    locale: string;
    has_arrived: boolean;
}

interface Track {
    id: number;
    name: Map<string, string>;
    description: Map<string, string>;
    color: string;
    position: number;
    requires_access_code: boolean;
}

const sessionResponse = await fetch(
    `${config.pretalx.baseUrl}/api/events/${config.pretalx.eventSlug}/submissions/?state=confirmed`,
    {
        headers: new Headers({
            Authorization: "Token " + import.meta.env.PRETALX_TOKEN,
        }),
    },
);
const sessions: Submission[] = (await sessionResponse.json())["results"];

const speakerResponse = await fetch(
    `${config.pretalx.baseUrl}/api/events/${config.pretalx.eventSlug}/speakers/`,
    {
        headers: new Headers({
            Authorization: "Token " + import.meta.env.PRETALX_TOKEN,
        }),
    },
);
const speakers: Speaker[] = (await speakerResponse.json())["results"];

const trackResponse = await fetch(
    `${config.pretalx.baseUrl}/api/events/${config.pretalx.eventSlug}/tracks/`,
    {
        headers: new Headers({
            Authorization: "Token " + import.meta.env.PRETALX_TOKEN,
        }),
    },
);
const tracks: Track[] = (await trackResponse.json())["results"];
---

<div class="columns is-multiline">
    {
        sessions.map((session: Submission) => (
            <div class="column is-full">
                <div
                    class="card"
                    onclick={`location.href = "${config.pretalx.baseUrl}/${config.pretalx.eventSlug}/talk/${session.code}"`}
                >
                    <div class="card-content">
                        <p class="title is-4">{session.title}</p>
                        <div class="content">
                            {session.speakers.map((item) => (
                                <>
                                    <span class="icon">
                                        <i class="fa-solid fa-person" />
                                    </span>
                                    <span>
                                        {
                                            speakers.find(
                                                (speaker) =>
                                                    speaker.code == item,
                                            )?.name
                                        }
                                    </span>
                                </>
                            ))}
                            <span class="icon">
                                <i class="fa-solid fa-tags" />
                            </span>
                            <span>
                                {
                                    tracks.find(
                                        (track) => track.id == session.track,
                                    )?.name[lang]
                                }
                            </span>
                            <span class="icon">
                                <i class="fa-solid fa-language" />
                            </span>
                            <span>{session.content_locale}</span>
                        </div>
                    </div>
                </div>
            </div>
        ))
    }
</div>
