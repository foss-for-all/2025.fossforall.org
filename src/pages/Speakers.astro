---
const { lang } = Astro.props;
import { sliceStringByBytes } from "@/lib/utils";
import { WebsiteConfig } from "@/config";
import { createHash } from 'crypto';
import type { Speaker } from "@/models/Speaker";
import { SpeakerCardAndModal } from "@/components/SpeakerCardAndModal";
import { createHash } from "crypto";

const config = WebsiteConfig(lang);

const response = await fetch(
    `${config.pretalx.baseUrl}/api/events/${config.pretalx.eventSlug}/speakers/`,
    {
        headers: new Headers({
            Authorization: "Token " + import.meta.env.PRETALX_TOKEN,
        }),
    },
);
const speakers: Speaker[] = (await response.json())["results"];
const {
  speakersToExpose = [],
} = Astro.props;
---

<div class="columns is-multiline">
    {
        speakers.map((speaker: Speaker) => speakersToExpose.includes(speaker.code) ? (
        <SpeakerCardAndModal client:load speaker={speaker} gravatarHash={createHash("SHA256").update(speaker.email, "utf-8").digest("hex")} />
        ):(<></>))
    }
</div>
